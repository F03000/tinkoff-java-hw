import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'ru.tinkoff.academy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.17.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.flywaydb:flyway-core:9.8.2'
	implementation 'org.modelmapper:modelmapper:2.4.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation "org.testcontainers:postgresql:1.17.6"
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	jvmArgs([
			'--enable-preview',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
			'--add-opens', 'jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED'
	])
	useJUnitPlatform()
	systemProperty "junit.jupiter.extensions.autodetection.enabled", "true"
	testLogging {
		showStandardStreams = true
		exceptionFormat TestExceptionFormat.FULL
		showExceptions true
		showCauses true
		showStackTraces true
	}
}